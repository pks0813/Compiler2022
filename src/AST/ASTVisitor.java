package AST;

public interface ASTVisitor {
    void visit(AssignDeclearNode node);
    void visit(AssignNode node);
    void visit(BackOpExpr node);
    void visit(BasicDeclearFunctionNode node);
    void visit(BinaryOpExpr node);
    void visit(BoolConstNode node);
    void visit(BoolTypeNode node);
    void visit(BreakNode node);
    void visit(ClassDeclearNode node);
    void visit(ClassMemberNode node);
    void visit(ClassTypeNode node);
    void visit(ContinueNode node);
    void visit(EmptyState node);
    void visit(ExprStateNode node);
    void visit(ForStateNode node);
    void visit(FunctionCallExpr node);
    void visit(IdentifyExprNode node);
    void visit(IfStateNode node);
    void visit(IntConstNode node);
    void visit(IntTypeNode node);
    void visit(MainFunctionDeclearNode node);
    void visit(ManyDeclearNode node);
    void visit(NewExprNode node);
    void visit(NullConstNode node);
    void visit(OneDeclearNode node);
    void visit(PreOpExpr node);
    void visit(ProgramNode node);
    void visit(ReturnNode node);
    void visit(StringConstNode node);
    void visit(StringTypeNode node);
    void visit(SubscriptNode node);
    void visit(SuiteStateNode node);
    void visit(ThisExprNode node);
    void visit(TypeArrayNode node);
    void visit(VoidTypeNode node);
    void visit(WhileStateNode node);
    void visit(LambdaExpr node);
}
